// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/Modal Render: match snapshot 1`] = `
.c7 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  background-color: #0067c5 !important;
  color: #FFFFFF !important;
  border-color: #0067c5 !important;
}

.c7:hover:not(:disabled) {
  background-color: #0074df !important;
  border-color: #0074df !important;
  color: #FFFFFF !important;
}

.c7:hover:not(:disabled) svg {
  color: #FFFFFF !important;
}

.c7:hover:not(:disabled) svg path {
  stroke: #FFFFFF !important;
}

.c7:focus {
  box-shadow: 0 0 0 3px #19548a !important;
}

.c7:disabled {
  color: #FFFFFF !important;
  background-color: #b7b1a9 !important;
  border-color: #b7b1a9 !important;
}

.c7:disabled svg {
  color: #FFFFFF !important;
}

.c7:disabled svg path {
  stroke: #FFFFFF !important;
}

.c7 svg {
  color: #FFFFFF !important;
}

.c7 svg path {
  stroke: #FFFFFF !important;
}

.c8 {
  background-color: inherit !important;
  color: #0067c5 !important;
  border-color: #0067c5 !important;
}

.c8:hover:not(:disabled) {
  background-color: #0074df !important;
  color: #FFFFFF !important;
}

.c8:hover:not(:disabled) svg {
  color: #FFFFFF !important;
}

.c8:hover:not(:disabled) svg path {
  stroke: #FFFFFF !important;
}

.c8:disabled {
  color: #FFFFFF !important;
  background-color: #b7b1a9 !important;
  border-color: #b7b1a9 !important;
}

.c8:disabled svg {
  color: #FFFFFF !important;
}

.c8:disabled svg path {
  stroke: #FFFFFF !important;
}

.c8:not(:disabled) svg {
  color: #0067c5 !important;
}

.c8:not(:disabled) svg path {
  stroke: #0067c5 !important;
}

.c0 {
  display: block;
  padding: 1rem 1rem 1rem 1rem;
  border-radius: 4px;
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  overflow: inherit;
  max-height: 100%;
  margin-bottom: 0;
  z-index: 1010;
  color: #3e3832;
  background-color: #FFFFFF;
}

.c2 {
  position: absolute !important;
  right: 0.5rem;
  top: 0.5rem;
  z-index: 999;
}

.c3 {
  text-align: center;
}

.c4 {
  margin: 1.5rem;
  text-align: center;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 {
  margin-right: 1rem;
  margin-top: 0.5rem;
  margin-botton: 0.5rem;
}

.c1 {
  overflow: auto;
  max-height: 85vh;
}

.c1.icon {
  margin-top: 3rem;
}

.c1.buttons {
  margin-top: 3rem;
}

<Modal
  closeButton={true}
  highContrast={false}
  modal={
    Object {
      "modalButtons": Array [
        Object {
          "main": true,
          "onClick": [MockFunction],
          "text": "modalMainButtonText",
        },
        Object {
          "onClick": [MockFunction],
          "text": "modalOtherButtonText",
        },
      ],
      "modalText": "mockModalText",
      "modalTitle": "mockModalTitle",
    }
  }
  onModalClose={[MockFunction]}
>
  <J
    highContrast={false}
  >
    <Component
      theme={
        Object {
          "alternative-background-color": "#FFFFFF",
          "alternative-hover-color": "#cce1f3",
          "black": "#000000",
          "border-radius-base": "4px",
          "border-radius-large": "6px",
          "border-radius-small": "2px",
          "container-desktop": "(940px + @grid-gutter-width)",
          "container-large-desktop": "(1140px + @grid-gutter-width)",
          "container-lg": "(1140px + @grid-gutter-width)",
          "container-md": "(940px + @grid-gutter-width)",
          "container-sm": "(720px + @grid-gutter-width)",
          "container-tablet": "(720px + @grid-gutter-width)",
          "fokusFarge": "#19548a",
          "grayBackground": "#e9e7e7",
          "grayIcon": "#b7b1a9",
          "grayInactive": "#78706a",
          "grayModia": "#333333",
          "grid-columns": "12",
          "grid-float-breakpoint": "768px",
          "grid-float-breakpoint-max": "(@grid-float-breakpoint - 1)",
          "grid-gutter-width": "16px",
          "inverted-font-color": "#FFFFFF",
          "line-height-large": "1.3333333",
          "line-height-small": "1.5",
          "main-active-color": "#005b82",
          "main-background-color": "#f1f1f1",
          "main-border-color": "#78706a",
          "main-border-radius": "4px",
          "main-border-width": "1px",
          "main-disabled-color": "#b7b1a9",
          "main-error-color": "#ba3a26",
          "main-focus-color": "#19548a",
          "main-font-color": "#3e3832",
          "main-hover-color": "#0074df",
          "main-interactive-color": "#0067c5",
          "main-success-color": "#06893a",
          "main-warning-color": "#ff9100",
          "navBakgrunn": "#ffffff",
          "navBla": "#0067c5",
          "navBlaDarken20": "#32414f",
          "navBlaDarken40": "#254b6d",
          "navBlaDarken60": "#19548a",
          "navBlaDarken80": "#0c5ea8",
          "navBlaLighten20": "#cce1f3",
          "navBlaLighten40": "#99c2e8",
          "navBlaLighten60": "#66a4dc",
          "navBlaLighten80": "#3385d1",
          "navDypBla": "#005b82",
          "navDypBlaDarken20": "#323f42",
          "navDypBlaDarken40": "#254652",
          "navDypBlaDarken60": "#194d62",
          "navDypBlaDarken80": "#0c5472",
          "navDypBlaLighten20": "#ccdee6",
          "navDypBlaLighten40": "#99bdcd",
          "navDypBlaLighten60": "#669db4",
          "navDypBlaLighten80": "#337c9b",
          "navGra20": "#c6c2bf",
          "navGra40": "#b7b1a9",
          "navGra60": "#78706a",
          "navGra80": "#59514b",
          "navGraBakgrunn": "#f1f1f1",
          "navGronn": "#06893a",
          "navGronnDarken20": "#334834",
          "navGronnDarken40": "#285835",
          "navGronnDarken60": "#1c6937",
          "navGronnDarken80": "#117938",
          "navGronnLighten20": "#cde7d8",
          "navGronnLighten40": "#9bd0b0",
          "navGronnLighten60": "#6ab889",
          "navGronnLighten80": "#38a161",
          "navLilla": "#634689",
          "navLillaDarken20": "#453b43",
          "navLillaDarken40": "#4d3e55",
          "navLillaDarken60": "#544066",
          "navLillaDarken80": "#5c4378",
          "navLillaLighten20": "#e0dae7",
          "navLillaLighten40": "#c1b5d0",
          "navLillaLighten60": "#a190b8",
          "navLillaLighten80": "#826ba1",
          "navLimeGronn": "#a2ad00",
          "navLimeGronnDarken20": "#524f28",
          "navLimeGronnDarken40": "#66671e",
          "navLimeGronnDarken60": "#7a7e14",
          "navLimeGronnDarken80": "#8e960a",
          "navLimeGronnLighten20": "#ecefcc",
          "navLimeGronnLighten40": "#dade99",
          "navLimeGronnLighten60": "#c7ce66",
          "navLimeGronnLighten80": "#b5bd33",
          "navLysBla": "#66cbec",
          "navLysBlaDarken20": "#465557",
          "navLysBlaDarken40": "#4e737c",
          "navLysBlaDarken60": "#5690a2",
          "navLysBlaDarken80": "#5eaec7",
          "navLysBlaLighten20": "#e0f5fb",
          "navLysBlaLighten40": "#c2eaf7",
          "navLysBlaLighten60": "#a3e0f4",
          "navLysBlaLighten80": "#85d5f0",
          "navLysGra": "#e9e7e7",
          "navMorkGra": "#3e3832",
          "navOransje": "#ff9100",
          "navOransjeDarken20": "#654a28",
          "navOransjeDarken40": "#8b5c1e",
          "navOransjeDarken60": "#b26d14",
          "navOransjeDarken80": "#d87f0a",
          "navOransjeLighten20": "#ffe9cc",
          "navOransjeLighten40": "#ffd399",
          "navOransjeLighten60": "#ffbd66",
          "navOransjeLighten80": "#ffa733",
          "navRod": "#c30000",
          "navRodDarken20": "#592d28",
          "navRodDarken40": "#73221e",
          "navRodDarken60": "#8e1614",
          "navRodDarken80": "#a80b0a",
          "navRodLighten20": "#f3cccc",
          "navRodLighten40": "#e79999",
          "navRodLighten60": "#db6666",
          "navRodLighten80": "#cf3333",
          "orangeFocus": "#ffbd66",
          "orangeFocusDarken20": "#65533c",
          "orangeFocusDarken40": "#8b6d47",
          "orangeFocusDarken60": "#b28851",
          "orangeFocusDarken80": "#d8a25c",
          "orangeFocusLighten20": "#fff2e0",
          "orangeFocusLighten40": "#ffe5c2",
          "orangeFocusLighten60": "#ffd7a3",
          "orangeFocusLighten80": "#ffca85",
          "padding-base-horizontal": "12px",
          "padding-base-vertical": "6px",
          "padding-large-horizontal": "16px",
          "padding-large-vertical": "10px",
          "padding-small-horizontal": "10px",
          "padding-small-vertical": "5px",
          "padding-xs-horizontal": "5px",
          "padding-xs-vertical": "1px",
          "pinkErrorBg": "#f3e3e3",
          "redError": "#ba3a26",
          "redErrorDarken20": "#573830",
          "redErrorDarken40": "#70392d",
          "redErrorDarken60": "#88392b",
          "redErrorDarken80": "#a13a28",
          "redErrorLighten20": "#f1d8d4",
          "redErrorLighten40": "#e3b0a8",
          "redErrorLighten60": "#d6897d",
          "redErrorLighten80": "#c86151",
          "screen-desktop": "992px",
          "screen-lg": "1200px",
          "screen-lg-desktop": "1200px",
          "screen-lg-min": "1200px",
          "screen-md": "992px",
          "screen-md-max": "(@screen-lg-min - 1)",
          "screen-md-min": "992px",
          "screen-sm": "768px",
          "screen-sm-max": "(@screen-md-min - 1)",
          "screen-sm-min": "768px",
          "screen-tablet": "768px",
          "screen-xs-max": "(@screen-sm-min - 1)",
          "type": "theme",
          "white": "#FFFFFF",
        }
      }
    >
      <Memo(l) />
      <Styled(Modal)
        isOpen={true}
        onRequestClose={[Function]}
        overlayClassName="modal__overlay"
      >
        <Modal
          ariaHideApp={true}
          bodyOpenClassName="ReactModal__Body--open"
          className="c0"
          closeTimeoutMS={0}
          contentElement={[Function]}
          isOpen={true}
          onRequestClose={[Function]}
          overlayClassName="modal__overlay"
          overlayElement={[Function]}
          parentSelector={[Function]}
          portalClassName="ReactModalPortal"
          preventScroll={false}
          role="dialog"
          shouldCloseOnEsc={true}
          shouldCloseOnOverlayClick={true}
          shouldFocusAfterRender={true}
          shouldReturnFocusAfterClose={true}
        >
          <Portal
            containerInfo={
              .c7 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  background-color: #0067c5 !important;
  color: #FFFFFF !important;
  border-color: #0067c5 !important;
}

.c7:hover:not(:disabled) {
  background-color: #0074df !important;
  border-color: #0074df !important;
  color: #FFFFFF !important;
}

.c7:hover:not(:disabled) svg {
  color: #FFFFFF !important;
}

.c7:hover:not(:disabled) svg path {
  stroke: #FFFFFF !important;
}

.c7:focus {
  box-shadow: 0 0 0 3px #19548a !important;
}

.c7:disabled {
  color: #FFFFFF !important;
  background-color: #b7b1a9 !important;
  border-color: #b7b1a9 !important;
}

.c7:disabled svg {
  color: #FFFFFF !important;
}

.c7:disabled svg path {
  stroke: #FFFFFF !important;
}

.c7 svg {
  color: #FFFFFF !important;
}

.c7 svg path {
  stroke: #FFFFFF !important;
}

.c8 {
  background-color: inherit !important;
  color: #0067c5 !important;
  border-color: #0067c5 !important;
}

.c8:hover:not(:disabled) {
  background-color: #0074df !important;
  color: #FFFFFF !important;
}

.c8:hover:not(:disabled) svg {
  color: #FFFFFF !important;
}

.c8:hover:not(:disabled) svg path {
  stroke: #FFFFFF !important;
}

.c8:disabled {
  color: #FFFFFF !important;
  background-color: #b7b1a9 !important;
  border-color: #b7b1a9 !important;
}

.c8:disabled svg {
  color: #FFFFFF !important;
}

.c8:disabled svg path {
  stroke: #FFFFFF !important;
}

.c8:not(:disabled) svg {
  color: #0067c5 !important;
}

.c8:not(:disabled) svg path {
  stroke: #0067c5 !important;
}

.c0 {
  display: block;
  padding: 1rem 1rem 1rem 1rem;
  border-radius: 4px;
  position: relative;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  overflow: inherit;
  max-height: 100%;
  margin-bottom: 0;
  z-index: 1010;
  color: #3e3832;
  background-color: #FFFFFF;
}

.c2 {
  position: absolute !important;
  right: 0.5rem;
  top: 0.5rem;
  z-index: 999;
}

.c3 {
  text-align: center;
}

.c4 {
  margin: 1.5rem;
  text-align: center;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c6 {
  margin-right: 1rem;
  margin-top: 0.5rem;
  margin-botton: 0.5rem;
}

.c1 {
  overflow: auto;
  max-height: 85vh;
}

.c1.icon {
  margin-top: 3rem;
}

.c1.buttons {
  margin-top: 3rem;
}

<div
                class="ReactModalPortal"
              >
                <div
                  class="ReactModal__Overlay ReactModal__Overlay--after-open modal__overlay"
                >
                  <div
                    aria-modal="true"
                    class="ReactModal__Content ReactModal__Content--after-open c0"
                    role="dialog"
                    tabindex="-1"
                  >
                    <div
                      class="c1"
                    >
                      <button
                        class="lukknapp c2"
                        data-test-id="c-modal__close-button-id"
                      >
                        <span
                          class="text-hide"
                        />
                      </button>
                      <h2
                        class="typo-undertittel c3"
                        data-test-id="c-modal__title-id"
                      >
                        mockModalTitle
                      </h2>
                      <div
                        class="c4"
                        data-test-id="c-modal__text-id"
                      >
                        mockModalText
                      </div>
                    </div>
                    <div
                      class="c5 buttons"
                    >
                      <div
                        class="c6"
                      >
                        <button
                          class="knapp c7 knapp--hoved"
                          data-test-id="c-modal__button-id-0"
                          id="c-modal__button-id-0"
                          type="submit"
                        >
                          modalMainButtonText
                        </button>
                      </div>
                      <div
                        class="c6"
                      >
                        <button
                          class="knapp c8 knapp--standard"
                          data-test-id="c-modal__button-id-1"
                          id="c-modal__button-id-1"
                          type="submit"
                        >
                          modalOtherButtonText
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            }
          >
            <ModalPortal
              ariaHideApp={true}
              bodyOpenClassName="ReactModal__Body--open"
              className="c0"
              closeTimeoutMS={0}
              contentElement={[Function]}
              defaultStyles={
                Object {
                  "content": Object {
                    "WebkitOverflowScrolling": "touch",
                    "background": "#fff",
                    "border": "1px solid #ccc",
                    "borderRadius": "4px",
                    "bottom": "40px",
                    "left": "40px",
                    "outline": "none",
                    "overflow": "auto",
                    "padding": "20px",
                    "position": "absolute",
                    "right": "40px",
                    "top": "40px",
                  },
                  "overlay": Object {
                    "backgroundColor": "rgba(255, 255, 255, 0.75)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                  },
                }
              }
              isOpen={true}
              onRequestClose={[Function]}
              overlayClassName="modal__overlay"
              overlayElement={[Function]}
              parentSelector={[Function]}
              portalClassName="ReactModalPortal"
              preventScroll={false}
              role="dialog"
              shouldCloseOnEsc={true}
              shouldCloseOnOverlayClick={true}
              shouldFocusAfterRender={true}
              shouldReturnFocusAfterClose={true}
              style={
                Object {
                  "content": Object {},
                  "overlay": Object {},
                }
              }
            >
              <div
                className="ReactModal__Overlay ReactModal__Overlay--after-open modal__overlay"
                onClick={[Function]}
                onMouseDown={[Function]}
                style={Object {}}
              >
                <div
                  aria-modal={true}
                  className="ReactModal__Content ReactModal__Content--after-open c0"
                  onClick={[Function]}
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onMouseUp={[Function]}
                  role="dialog"
                  style={Object {}}
                  tabIndex="-1"
                >
                  <styled.div
                    className=""
                  >
                    <div
                      className="c1"
                    >
                      <Styled(Lukknapp)
                        data-test-id="c-modal__close-button-id"
                        onClick={[Function]}
                      >
                        <Lukknapp
                          bla={false}
                          className="c2"
                          data-test-id="c-modal__close-button-id"
                          hvit={false}
                          onClick={[Function]}
                          overstHjorne={false}
                        >
                          <button
                            className="lukknapp c2"
                            data-test-id="c-modal__close-button-id"
                            onClick={[Function]}
                          >
                            <span
                              className="text-hide"
                            />
                          </button>
                        </Lukknapp>
                      </Styled(Lukknapp)>
                      <Styled(Undertittel)
                        data-test-id="c-modal__title-id"
                      >
                        <Undertittel
                          className="c3"
                          data-test-id="c-modal__title-id"
                        >
                          <TypografiBase
                            className="c3"
                            data-test-id="c-modal__title-id"
                            type="undertittel"
                          >
                            <h2
                              className="typo-undertittel c3"
                              data-test-id="c-modal__title-id"
                            >
                              mockModalTitle
                            </h2>
                          </TypografiBase>
                        </Undertittel>
                      </Styled(Undertittel)>
                      <styled.div
                        data-test-id="c-modal__text-id"
                      >
                        <div
                          className="c4"
                          data-test-id="c-modal__text-id"
                        >
                          mockModalText
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                  <styled.div
                    className="buttons"
                  >
                    <div
                      className="c5 buttons"
                    >
                      <styled.div
                        key="0"
                      >
                        <div
                          className="c6"
                        >
                          <Styled(o)
                            data-test-id="c-modal__button-id-0"
                            disabled={false}
                            id="c-modal__button-id-0"
                            key="modalMainButtonText"
                            onClick={[Function]}
                          >
                            <o
                              className="c7"
                              data-test-id="c-modal__button-id-0"
                              disabled={false}
                              id="c-modal__button-id-0"
                              onClick={[Function]}
                            >
                              <c
                                autoDisableVedSpinner={false}
                                className="c7"
                                data-test-id="c-modal__button-id-0"
                                disabled={false}
                                htmlType="submit"
                                id="c-modal__button-id-0"
                                inaktivKlasseVedDisabled={false}
                                kompakt={false}
                                mini={false}
                                onClick={[Function]}
                                spinner={false}
                                type="hoved"
                              >
                                <button
                                  className="knapp c7 knapp--hoved"
                                  data-test-id="c-modal__button-id-0"
                                  disabled={false}
                                  id="c-modal__button-id-0"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  modalMainButtonText
                                </button>
                              </c>
                            </o>
                          </Styled(o)>
                        </div>
                      </styled.div>
                      <styled.div
                        key="1"
                      >
                        <div
                          className="c6"
                        >
                          <Styled(o)
                            data-test-id="c-modal__button-id-1"
                            disabled={false}
                            id="c-modal__button-id-1"
                            key="modalOtherButtonText"
                            onClick={[Function]}
                          >
                            <o
                              className="c8"
                              data-test-id="c-modal__button-id-1"
                              disabled={false}
                              id="c-modal__button-id-1"
                              onClick={[Function]}
                            >
                              <c
                                autoDisableVedSpinner={false}
                                className="c8"
                                data-test-id="c-modal__button-id-1"
                                disabled={false}
                                htmlType="submit"
                                id="c-modal__button-id-1"
                                inaktivKlasseVedDisabled={false}
                                kompakt={false}
                                mini={false}
                                onClick={[Function]}
                                spinner={false}
                                type="standard"
                              >
                                <button
                                  className="knapp c8 knapp--standard"
                                  data-test-id="c-modal__button-id-1"
                                  disabled={false}
                                  id="c-modal__button-id-1"
                                  onClick={[Function]}
                                  type="submit"
                                >
                                  modalOtherButtonText
                                </button>
                              </c>
                            </o>
                          </Styled(o)>
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </div>
            </ModalPortal>
          </Portal>
        </Modal>
      </Styled(Modal)>
    </Component>
  </J>
</Modal>
`;
